{"version":3,"sources":["components/Image.js","components/Appbar.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","maxWidth","media","height","paddingTop","avatar","backgroundColor","red","Image","img","setModalImg","handleOpen","classes","style","margin","Card","className","width","CardHeader","Avatar","aria-label","src","userImageURL","alt","title","user","subheader","CardMedia","image","largeImageURL","tags","cursor","onClick","CardContent","Typography","variant","color","component","href","pageURL","target","CardActions","disableSpacing","flexGrow","menuButton","marginRight","spacing","display","breakpoints","up","search","position","borderRadius","shape","fade","palette","common","white","marginLeft","searchIcon","padding","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","Appbar","query","setQuery","imagesPerPage","setImagesPerPage","AppBar","Toolbar","IconButton","edge","noWrap","fontFamily","InputBase","placeholder","input","value","onChange","e","inputProps","App","API_KEY","process","console","log","useState","data","setData","open","setOpen","modalImg","useEffect","Axios","get","then","resp","hits","map","key","id","Modal","aria-labelledby","aria-describedby","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","maxHeight","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a345ec6b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport { Avatar } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\",\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n}));\r\n\r\nconst Image = ({ img, setModalImg, handleOpen }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div style={{ margin: \"1em 1em\" }}>\r\n      <Card\r\n        className={classes.root}\r\n        style={{ height: \"300px\", width: \"300px\" }}\r\n      >\r\n        <CardHeader\r\n          avatar={\r\n            <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n              <img src={img.userImageURL} alt=\"\" />\r\n            </Avatar>\r\n          }\r\n          title={img.user}\r\n          subheader=\"Shot\"\r\n        />\r\n        <CardMedia\r\n          className={classes.media}\r\n          image={img.largeImageURL}\r\n          title={img.tags}\r\n          style={{ cursor: \"pointer\" }}\r\n          onClick={() => {\r\n            setModalImg(img.largeImageURL);\r\n            handleOpen();\r\n          }}\r\n        />\r\n        <CardContent>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            From{\" \"}\r\n            <a href={img.pageURL} target=\"blank\" className=\"credits\">\r\n              pixabay\r\n            </a>\r\n          </Typography>\r\n        </CardContent>\r\n        <CardActions disableSpacing></CardActions>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Image;\r\n","import React from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    display: \"none\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"block\",\r\n    },\r\n  },\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    \"&:hover\": {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"12ch\",\r\n      \"&:focus\": {\r\n        width: \"20ch\",\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst Appbar = ({ query, setQuery, imagesPerPage, setImagesPerPage }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography\r\n            className={classes.title}\r\n            variant=\"h6\"\r\n            noWrap\r\n            style={{ fontFamily: ' \"Montserrat\", sans-serif' }}\r\n          >\r\n            PIXABAY API\r\n          </Typography>\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Search Image\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              value={query}\r\n              onChange={(e) => setQuery(e.target.value)}\r\n              inputProps={{ \"aria-label\": \"search\" }}\r\n            />\r\n          </div>\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <ArrowDropDownIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Pages\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              value={imagesPerPage}\r\n              onChange={(e) => setImagesPerPage(e.target.value)}\r\n              inputProps={{ \"aria-label\": \"search\" }}\r\n            />\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Appbar;\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Image from \"./components/Image\";\nimport Axios from \"axios\";\nimport Appbar from \"./components/Appbar\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport Fade from \"@material-ui/core/Fade\";\n\nconst App = () => {\n  const API_KEY = process.env.REACT_APP_API_KEY;\n  console.log(API_KEY);\n  const [query, setQuery] = useState(\"code\");\n  const [imagesPerPage, setImagesPerPage] = useState(10);\n  const [data, setData] = useState();\n  const [open, setOpen] = useState(false);\n  const [modalImg, setModalImg] = useState();\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    Axios.get(\n      `https://pixabay.com/api/?key=${API_KEY}&q=${query}&image_type=photo&per_page=${imagesPerPage}`\n    ).then((resp) => {\n      setData(resp.data.hits);\n    });\n  }, [query, imagesPerPage]);\n\n  return (\n    <div>\n      <Appbar\n        query={query}\n        setQuery={setQuery}\n        imagesPerPage={imagesPerPage}\n        setImagesPerPage={setImagesPerPage}\n      />\n      <div className=\"pics\">\n        {data &&\n          data.map((img) => (\n            <Image\n              key={img.id}\n              img={img}\n              setModalImg={setModalImg}\n              handleOpen={handleOpen}\n            />\n          ))}\n      </div>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n        style={{\n          height: \"90vh\",\n          width: \"80vw\",\n          margin: \"auto\",\n        }}\n      >\n        <Fade in={open}>\n          <div\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            {modalImg && (\n              <img\n                src={modalImg}\n                alt=\"\"\n                height=\"100%\"\n                width=\"100%\"\n                style={{ maxHeight: \"90vh\" }}\n              />\n            )}\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}